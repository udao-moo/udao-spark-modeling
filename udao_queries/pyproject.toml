[project]
name = "query-generator"
version = "0.2.0"
requires-python = ">= 3.11"
dependencies = ["ollama>=0.5.1,<0.6"]

[project.optional-dependencies]
test = ["pytest"]
lint = ["ruff"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.pixi.pypi-dependencies]
query_generator = { path = ".", editable = true }

[tool.pixi.dependencies]
typer = ">=0.15.2,<0.16"
rich  = ">=14.0.0,<15"
pypika = ">=0.48.9,<0.49"
numpy = ">=2.2.5,<3"
duckdb = ">=1.2.2,<2"
polars = ">=1.27.1,<2"
tqdm = "*"
cattrs = ">=24.1.2,<25"
toml = ">=0.10.2,<0.11"
types-toml = ">=0.10.8.20240310,<0.11"


[tool.pixi.feature.test.dependencies]
pytest = ">=8.3.5,<9"

[tool.pixi.feature.lint.dependencies]
ruff = ">=0.11.7,<0.12"
mypy = ">=1.15.0,<2"

[tool.pixi.feature.dev.dependencies]
ipython = ">=9.1.0,<10"

[tool.pixi.environments]
default = { features = [], solve-group = "default" }
test    = { features = ["test"], solve-group = "default" }
lint    = { features = ["lint"], solve-group = "default" }
dev    = { features = ["lint", "test", "dev"], solve-group = "default" }

[tool.pixi.tasks]
#lint = "ruff format src/"
main = "python src/query_generator/main.py"
commit = { cmd = "fossil commit", depends-on = ["lint", "test"]}

[tool.pixi.feature.lint.tasks]
format = "ruff format src tests"
check = "ruff check --fix src"
typing = "mypy --strict src"
mypy = "mypy"
lint = {depends-on = ["format","check","typing"]}

[tool.pixi.feature.test.tasks]
test = "pytest"

[tool.ruff]
line-length = 80
indent-width = 2
# indent-style = "space"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # Pyflakes
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",    # isort
    "C4",   # flake8-comprehensions
    "Q",    # flake8-quotes
    "NPY",  # Numpy rules
    "PD",   # Pandas rules
    "PERF", # Perflint
    "FBT",  # Boolean trap
    "COM",  # Commas rules
    "UP",   # Newer python features
    "INP",  # Implicit namespace package (__init__.py)
    "TRY",  # Try and except rules
    "EM",   # Exception messages
    "PL",   # Pylint rules
    "N",    # Naming conventions
    "RET",  # Return rules
    "TD",   # TODO rules
    # "PTH",  # use-pathlib rules
]
ignore = ["COM812"]

[tool.mypy]
ignore_missing_imports = true

[tool.pytest.ini_options]
pythonpath = "."
testpaths = [ "tests" ]

[tool.ruff.lint.per-file-ignores]
# Too many arguments
"src/query_generator/main.py" = ["PLR0913"] 

